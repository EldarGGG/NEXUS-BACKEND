# Generated by Django 5.2.4 on 2025-08-02 10:08

from django.db import migrations


def fix_default_storage(apps, schema_editor):
    """
    Исправляет недостающие значения default_storage для товаров
    """
    Item = apps.get_model('stores', 'Item')
    Storage = apps.get_model('stores', 'Storage')
    Stock = apps.get_model('stores', 'Stock')
    City = apps.get_model('stores', 'City')
    Country = apps.get_model('stores', 'Country')
    
    # Найти все товары без default_storage
    items_without_storage = Item.objects.filter(default_storage__isnull=True)
    
    for item in items_without_storage:
        # Попробуем найти склад из Stock записей
        stock = Stock.objects.filter(item=item).first()
        
        if stock and stock.storage:
            item.default_storage = stock.storage
        else:
            # Найти любой склад в магазине товара
            storage = Storage.objects.filter(store=item.store).first()
            
            if storage:
                item.default_storage = storage
            else:
                # Получить или создать страну и город по умолчанию
                country, _ = Country.objects.get_or_create(
                    name="Россия",
                    defaults={'name': "Россия"}
                )
                city, _ = City.objects.get_or_create(
                    name="Не указан",
                    country=country,
                    defaults={'name': "Не указан", 'country': country}
                )
                
                # Создать склад по умолчанию для магазина
                storage = Storage.objects.create(
                    store=item.store,
                    name="Основной склад",
                    city=city,
                    address="Не указан"
                )
                item.default_storage = storage
        
        item.save()


def reverse_fix_default_storage(apps, schema_editor):
    """
    Обратная операция - не делаем ничего, так как это исправление
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('stores', '0006_fill_default_storage'),
    ]

    operations = [
        migrations.RunPython(fix_default_storage, reverse_fix_default_storage),
    ]
